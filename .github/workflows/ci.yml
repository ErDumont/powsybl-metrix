name: CI-cpp

on: [push]

defaults:
  run:
    shell: bash

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    container: 'centos:centos7'
    steps:
      - name: Install Dependancies
        run: |
          yum update -y
          yum install -y epel-release
          yum install -y git redhat-lsb-core make wget centos-release-scl scl-utils
          yum install -y devtoolset-9

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.22.x'
      
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install boost
        run: |  
          source /opt/rh/devtoolset-9/enable
          wget https://boostorg.jfrog.io/artifactory/main/release/1.73.0/source/boost_1_73_0.tar.gz
          tar -xzvf ./boost_1_73_0.tar.gz
          cd boost_1_73_0
          ./bootstrap.sh --prefix=/usr/local
          ./b2 install --without-python -j 5
          cd ..
        
      - name: Configure 3rd parties
        run: |
          source /opt/rh/devtoolset-9/enable
          cmake -S $GITHUB_WORKSPACE/metrix-simulator/external -B $GITHUB_WORKSPACE/metrix-simulator/build-linux/external
        
      - name: Build 3rd parties
        run: |
          cmake --build $GITHUB_WORKSPACE/metrix-simulator/build-linux/external --parallel 2

      - name: Configure CMake
        run: |
          source /opt/rh/devtoolset-9/enable
          cmake -S $GITHUB_WORKSPACE/metrix-simulator -Wno-dev -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/metrix-simulator/build-linux/install -B $GITHUB_WORKSPACE/metrix-simulator/build-linux

      - name: Build
        run: cmake --build $GITHUB_WORKSPACE/metrix-simulator/build-linux --target install --parallel 2

      - name: Tests
        run: cd $GITHUB_WORKSPACE/metrix-simulator/build-linux && ctest -j2 --output-on-failure

  qa:
    name: QA - CI
    runs-on: ubuntu-latest
    container: 'centos:centos7'
    steps:
      - name: Install Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Install gcovr
        run: |
          yum update -y
          yum install -y epel-release
          yum install -y git redhat-lsb-core make wget centos-release-scl scl-utils
          yum install -y devtoolset-9
          yum install -y python3 python3-pip wget
          pip3 install gcovr

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.22.x'

      - name: Install Sonar wrapper
        working-directory: ${{ runner.workspace }}
        run: |
          wget https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip build-wrapper-linux-x86.zip

      - name: Install Sonar scanner
        working-directory: ${{ runner.workspace }}
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
          unzip sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
          ln -s sonar-scanner-${SONAR_SCANNER_VERSION} sonar
          rm sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
        env:
          SONAR_SCANNER_VERSION: 3.3.0.1492

      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install boost
        run: |  
          source /opt/rh/devtoolset-9/enable
          wget https://boostorg.jfrog.io/artifactory/main/release/1.73.0/source/boost_1_73_0.tar.gz
          tar -xzvf ./boost_1_73_0.tar.gz
          cd boost_1_73_0
          ./bootstrap.sh --prefix=/usr/local
          ./b2 install --without-python -j 5
          cd ..

      - name: Configure 3rd parties
        run: |
          source /opt/rh/devtoolset-9/enable
          cmake -S $GITHUB_WORKSPACE/metrix-simulator/external -B $GITHUB_WORKSPACE/metrix-simulator/build/external

      - name: Build 3rd parties
        run: >
          cmake --build $GITHUB_WORKSPACE/metrix-simulator/build/external --parallel 2

      - name: Configure CMake
        run: |
          source /opt/rh/devtoolset-9/enable
          cmake -Wno-dev -S $GITHUB_WORKSPACE/metrix-simulator -B $GITHUB_WORKSPACE/metrix-simulator/build -DCMAKE_BUILD_TYPE=Debug -DCODE_COVERAGE=TRUE -DMETRIX_RUN_ALL_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/metrix-simulator/build/install

      - name: Build
        run: |
          source /opt/rh/devtoolset-9/enable
          ${{ runner.workspace }}/build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir $GITHUB_WORKSPACE/metrix-simulator/build/output cmake --build $GITHUB_WORKSPACE/metrix-simulator/build --parallel 2 --target install

      - name: Tests
        run: cd $GITHUB_WORKSPACE/metrix-simulator/build && ctest -j8 --output-on-failure

      - name: Code coverage
        run: cmake --build $GITHUB_WORKSPACE/metrix-simulator/build --target code-coverage

      - name: Sonarcloud
        working-directory: ${{ runner.workspace }}/powsybl-metrix/metrix-simulator
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          ${{ runner.workspace }}/sonar/bin/sonar-scanner
          -Dsonar.host.url=https://sonarcloud.io
